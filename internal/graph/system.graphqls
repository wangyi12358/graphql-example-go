type Lov {
  id: Int!
  "名称"
  name: String!
  "编码"
  code: String!
  "描述"
  desc: String
}

type LovField {
  id: Int!
  "名称"
  label: String!
  "描述"
  desc: String
  "值"
  value: Int!
  "状态"
  status: Int!
}

type LovPage {
  "总数"
  total: Int!
  "列表"
  data: [Lov!]!
}

input LovPageInput {
  "名称模糊查询"
  name: String
  "编码模糊查询"
  code: String
}

input CreateLov {
  "名称"
  name: String!
  "编码"
  code: String!
  "描述"
  desc: String
}

input CreateLovField {
  "名称"
  label: String!
  "描述"
  desc: String
  "值"
  value: Int!
  "状态"
  status: Int!
  "lovId"
  lovId: Int!
}

type User {
  id: Int!
  "用户名"
  username: String!
  "创建时间"
  createdAt: Int!
  "昵称"
  nickname: String
  "手机号"
  phone: String
  "性别"
  gender: Int!
  "头像"
  head: String
  "备注"
  remark: String
  "状态"
  state: Int!
  "邮箱"
  email: String
}

type Users {
  "总数"
  total: Int!
  "列表"
  data: [User!]!
}

input UsersInput {
  nickname: String
}

input CreateUser {
  username: String!
  nickname: String!
  password: String! @constraint(validate: "max=16,min=6", name: "密码")
  phone: String!
  gender: Int!
  remark: String
  email: String! @constraint(validate: "email", name: "邮箱")
}

input LoginInput {
  username: String!
  password: String!
}

type Login {
  user: User!
  token: String!
}